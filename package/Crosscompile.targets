<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<DisableUnsupportedError>true</DisableUnsupportedError>
	</PropertyGroup>

	 <PropertyGroup>
        <!-- 根据当前系统生成 RuntimeIdentifier -->
        <HostRuntimeIdentifier Condition="$([MSBuild]::IsOSPlatform('Windows')) and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == 'x64'">win-x64</HostRuntimeIdentifier>
        <HostRuntimeIdentifier Condition="$([MSBuild]::IsOSPlatform('Windows')) and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)== 'arm64'">win-arm64</HostRuntimeIdentifier>

        <HostRuntimeIdentifier Condition="$([MSBuild]::IsOSPlatform('Linux')) and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)== 'x64'">linux-x64</HostRuntimeIdentifier>
        <HostRuntimeIdentifier Condition="$([MSBuild]::IsOSPlatform('Linux')) and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)== 'arm64'">linux-arm64</HostRuntimeIdentifier>

        <HostRuntimeIdentifier Condition="$([MSBuild]::IsOSPlatform('macOS')) and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)== 'x64'">osx-x64</HostRuntimeIdentifier>
        <HostRuntimeIdentifier Condition="$([MSBuild]::IsOSPlatform('macOS')) and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)== 'arm64'">osx-arm64</HostRuntimeIdentifier>
    </PropertyGroup>
	
	
    <Target Name="PrintHostRuntimeIdentifier" BeforeTargets="Build">
        <Message Text="Current Host RuntimeIdentifier:$(HostRuntimeIdentifier)" Importance="High" />
    </Target>

	<UsingTask TaskName="PrependPath"
			   TaskFactory="RoslynCodeTaskFactory"
			   AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">

		<ParameterGroup>
			<Value ParameterType="System.String" Required="true" />
		</ParameterGroup>

		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
          Environment.SetEnvironmentVariable("PATH", Value + Path.PathSeparator + Environment.GetEnvironmentVariable("PATH"));
        ]]>
			</Code>
		</Task>

	</UsingTask>

	<Target Name="SetPathToClang"
			BeforeTargets="SetupOSSpecificProps">

		<PrependPath Value="$(MSBuildThisFileDirectory)/fakeclang/$(HostRuntimeIdentifier)" />

	</Target>

	<!-- BEGIN: Works around ILCompiler targets not detecting this as a cross compilation -->
	<Target Name="OverwriteTargetTriple"
			AfterTargets="SetupOSSpecificProps"
			BeforeTargets="LinkNative">

		<PropertyGroup>
			<CrossCompileRid />
			<CrossCompileRid>$(RuntimeIdentifier)</CrossCompileRid>

			<CrossCompileArch />
			<CrossCompileArch Condition="$(CrossCompileRid.EndsWith('-x64'))">x86_64</CrossCompileArch>
			<CrossCompileArch Condition="$(CrossCompileRid.EndsWith('-arm64'))">aarch64</CrossCompileArch>

			<TargetTriple />
			<TargetTriple Condition="'$(CrossCompileArch)' != ''">$(CrossCompileArch)-linux-gnu</TargetTriple>
			<TargetTriple Condition="'$(CrossCompileArch)' != '' and ($(CrossCompileRid.StartsWith('linux-musl')) or $(CrossCompileRid.StartsWith('alpine')))">$(CrossCompileArch)-linux-musl</TargetTriple>
		</PropertyGroup>

		<ItemGroup>
			<LinkerArg Include="--target=$(TargetTriple)" />
			<!-- libs such as libz -->
			<LinkerArg Include="-L$(MSBuildThisFileDirectory)libs\$(RuntimeIdentifier)" Condition="$(RuntimeIdentifier.StartsWith('linux'))" />
		</ItemGroup>

	</Target>
	<!-- END: Works around ILCompiler targets not detecting this as a cross compilation -->

</Project>
