name: Build Nuget Packages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        filter: tree:0
    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Build fake clang
      run: |
        dotnet publish ./clang/clang.csproj -r win-x64 -c Release -o ./package/fakeclang/win-x64
        dotnet publish ./clang/clang.csproj -r win-arm64 -c Release -o ./package/fakeclang/win-arm64
        dotnet publish ./clang/clang.csproj -r linux-x64 -c Release -o ./package/fakeclang/linux-x64
        dotnet publish ./clang/clang.csproj -r linux-arm64 -c Release -o ./package/fakeclang/linux-arm64
        dotnet publish ./clang/clang.csproj -r osx-x64 -c Release -o ./package/fakeclang/osx-x64
        dotnet publish ./clang/clang.csproj -r osx-arm64 -c Release -o ./package/fakeclang/osx-arm64
        
    - name: pack nugets
      run: dotnet build -t:Pack package/OpenHarmony.NET.PublishAotCross.nuproj -o ./build -p:Version=0.0.0-alpha.${{github.run_number}}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: packages
        path: build
        
  publish-to-nuget:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: packages
          path: build
      - name: Push to NuGet
        run: |
          dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
